name: Advanced Deb Reverse Analysis

on:
  workflow_dispatch:
    inputs:
      deb_file:
        description: 'Path to .deb file'
        required: true

permissions:
  contents: write

jobs:
  analyze-deb:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y binutils xz-utils python3 python3-pip llvm clang file
        pip3 install lief

    - name: Setup directories
      run: |
        mkdir -p work/{control,data}
        mkdir -p output/{raw,src}

    - name: Extract .deb file
      run: |
        find . -name "*.deb" -exec cp {} work/ \;
        cd work
        ar x *.deb
        tar -xf control.tar.* -C control
        tar -xf data.tar.* -C data

    - name: Process dylib (Mach-O compatible)
      run: |
        DYMLIB_PATH=$(find work/data -name "*.dylib" -print -quit)
        if [ -f "$DYMLIB_PATH" ]; then
          echo "Found dylib: $DYMLIB_PATH"
          mkdir -p output/raw
          cp "$DYMLIB_PATH" output/raw/WechatPushMsgPage.dylib
          
          file "$DYMLIB_PATH" > output/raw/file_info.txt
          llvm-nm --demangle "$DYMLIB_PATH" > output/raw/nm_output.txt || true
          strings "$DYMLIB_PATH" | grep -E 'OBJC_CLASS|_TTS|_OBJC_' > output/raw/objc_symbols.txt || true

          python3 scripts/lief_analysis.py \
            --dylib "$DYMLIB_PATH" \
            --output output/raw/lief_export.txt
        else
          echo "::error::No .dylib found in package!"
          exit 1
        fi

    - name: Run final reverse pipeline (headers, tweak, Makefile)
      run: |
        bash scripts/run_all.sh

    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: reverse-analysis-results
        path: |
          output/raw/
          output/src/
          Makefile
