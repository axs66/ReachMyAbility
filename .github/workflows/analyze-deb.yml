name: Deb Reverse Analysis

on:
  workflow_dispatch:
    inputs:
      deb_file:
        description: 'Path or URL to .deb file (e.g. deb/1.deb or https://raw.githubusercontent.com/...)'
        required: true

permissions:
  contents: write  # 允许提交回仓库

jobs:
  analyze-deb:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true  # 保留写入令牌，便于后续 push

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y binutils dpkg-dev xz-utils python3 python3-pip llvm clang file dpkg
          pip3 install lief

      - name: Run full analysis pipeline
        run: |
          bash scripts/run_all.sh "${{ github.event.inputs.deb_file }}"

      - name: Upload raw analysis artifacts
        uses: actions/upload-artifact@v4
        with:
          name: raw-results
          path: output/raw  # 上传 output/raw 目录作为工件 :contentReference[oaicite:0]{index=0}

      - name: Upload generated source artifacts
        uses: actions/upload-artifact@v4
        with:
          name: src-results
          path: output/src  # 上传 output/src 目录作为工件 :contentReference[oaicite:1]{index=1}

      - name: Commit generated outputs back to repo
        run: |
          # 配置 git 用户信息
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # 将新增/修改的 output 目录纳入版本控制
          git add output/raw output/src
          # 仅当有改动时才提交
          if ! git diff --cached --quiet; then
            git commit -m "chore: add reverse-analysis outputs [ci skip]"
            git push
          else
            echo "No changes to commit"
          fi
        # 这一步使用 Git CLI 在流程中提交并推送改动回主分支 :contentReference[oaicite:2]{index=2}
